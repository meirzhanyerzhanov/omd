# Guido van Rossum <guido@python.org>

def next_step_decider(option1, option2):
    option = ''
    options = {option1: True, option2: False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
    return options[option]

def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    if next_step_decider('–¥–∞', '–Ω–µ—Ç'):
        return step2_umbrella()
    return step2_no_umbrella()

def step2_umbrella():
    """ 
    –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –≥—Ä—É—Å—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –æ–± —É—Ç–∫–µ, –≤–∑—è–≤—à–µ–π –∑–æ–Ω—Ç
    """
    print(
        '–°–æ–±–∏—Ä–∞—è—Å—å –≤–∑—è—Ç—å –∑–æ–Ω—Ç, —É—Ç–∫–∞ –ø–æ–Ω—è–ª–∞, —á—Ç–æ —É –Ω–µ–µ –Ω–µ—Ç —Ä—É–∫. '
        '–ö–∞–∫ –µ–π –¥–µ—Ä–∂–∞—Ç—å –∑–æ–Ω—Ç–∏–∫, —Ä–æ—Ç –∏–ª–∏ –∫—Ä—ã–ª—å—è?'
    )
    if next_step_decider('—Ä–æ—Ç', '–∫—Ä—ã–ª—å—è'):
        print(
            '–î–æ–∂–¥—è –Ω–µ –±—ã–ª–æ, –Ω–æ –∏–∑-–∑–∞ –∑–æ–Ω—Ç–∞ —É—Ç–∫–∞ –ø–ª–æ—Ö–æ –≤–∏–¥–µ–ª–∞ –ø–æ–¥ –Ω–æ–≥–∞–º–∏. '
            '–û–Ω–∞ —Å–∏–ª—å–Ω–æ —É–ø–∞–ª–∞ –∏ —É–¥–∞—Ä–∏–ª–∞—Å—å –≥–æ–ª–æ–≤–æ–π'
            )
    else:
        print(
            '–î–æ–∂–¥—è –Ω–µ –±—ã–ª–æ, –Ω–æ –ø–æ—Å–∫–æ–ª—å–∫—É —É –Ω–µ–µ –Ω–µ –±—ã–ª–æ –ø–∞–ª—å—Ü–µ–≤, –æ–Ω–∞ –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ä–æ–Ω—è–ª–∞ –∑–æ–Ω—Ç —Å–µ–±–µ –Ω–∞ –Ω–æ–≥—É. '
            '–ë—ã–ª–æ –æ—á–µ–Ω—å –±–æ–ª—å–Ω–æ'
            )

def step2_no_umbrella():
    """ 
    –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –≤–µ—Å–µ–ª—É—é –∏—Å—Ç–æ—Ä–∏—é –æ–± —É—Ç–∫–µ, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –≤–∑—è–ª–∞ –∑–æ–Ω—Ç.
    """
    print(
        '–î–æ–∂–¥—è –Ω–µ –±—ã–ª–æ, –æ–Ω–∞ —Å–ø–æ–∫–æ–π–Ω–æ –¥–æ—à–ª–∞ –¥–æ –±–∞—Ä–∞ –∏ –∑–∞–∫–∞–∑–∞–ª–∞ —Å–µ–±–µ –ø–∏–≤–æ. '
        '–ü–æ–ø–∏–≤–∞—è –ø–∏–≤–∞ –ø—Ä—è–º–æ –∏–∑ –∫—Ä—É–∂–∫–∏, –æ–Ω–∞ –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ–ª–∞ –≤–µ—á–µ—Ä'
        )

if __name__ == '__main__':
    step1()
